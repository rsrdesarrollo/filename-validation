[build-system]
build-backend = "setuptools.build_meta"

requires = [
  "setuptools",
  "setuptools-scm",
]

[project]
name = "filename-validation"
description = "Pre-commit hook to validate Python filenames."
readme = "README.md"
keywords = [
  "filename validation",
  "pre-commit",
]
license = { file = "LICENSE" }
authors = [
  { name = "Stefanie Molin", email = "24376333+stefmolin@users.noreply.github.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = [
  "version",
]

dependencies = [  ]
optional-dependencies.dev = [
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest-randomly",
]
urls.Documentation = "https://github.com/stefmolin/filename-validation"
urls.Homepage = "https://github.com/stefmolin/filename-validation"
scripts.validate-filename = "filename_validation.cli:main"

[tool.setuptools.packages.find]
where = [
  "src",
]

[tool.setuptools.dynamic]
version = { attr = "filename_validation.__version__" }

[tool.ruff]
line-length = 88
format.indent-style = "space"
format.quote-style = "single"
lint.select = [
  "B", # flake8-bugbear rules
  "C", # mccabe rules
  "E", # pycodestyle error rules
  "F", # pyflakes rules
  "I", # isort rules
  "W", # pycodestyle warning rules
]
lint.ignore = [
  "C901", # max-complexity-10
  "E501", # line-too-long
]

lint.isort.known-first-party = [
  "filename_validation",
]

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "-l",
  "-v",
  "--tb=short",
  "--import-mode=importlib",
  "--strict-markers",
  "--strict-config",
  "--cov=filename_validation",
  "--cov=tests",
  "--no-cov-on-fail",
  "--cov-report=term-missing",
]
xfail_strict = true
testpaths = [
  "tests",
]

[tool.numpydoc_validation]
checks = [
  "all",  # report on all checks
  "ES01", # but don't require an extended summary
  "EX01", # or examples
  "SA01", # or a see also section
  "SS06", # and don't require the summary to fit on one line
]
exclude = [ # don't report on checks for these
  '\.__init__$',
  '\.__repr__$',
  '\.__str__$',
]
override_SS05 = [ # allow docstrings to start with these words
  '^Process ',
  '^Assess ',
  '^Access ',
]
